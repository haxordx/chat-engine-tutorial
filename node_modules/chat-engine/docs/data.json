{
    "project": {
        "name": "OpenChatFramework",
        "version": "1.0.0",
        "description": "Open Chat Framework"
    },
    "files": {
        "src/index.js": {
            "name": "src/index.js",
            "modules": {},
            "classes": {
                "OpenChatFramework": 1,
                "RootEmitter": 1,
                "Emitter": 1,
                "Chat": 1,
                "User": 1,
                "Me": 1,
                "OCF": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "OpenChatFramework": {
            "name": "OpenChatFramework",
            "shortname": "OpenChatFramework",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 15,
            "description": "Global object used to create an instance of OCF.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "foo",
                    "description": "Argument 1",
                    "type": "Object"
                },
                {
                    "name": "config.rltm",
                    "description": "OCF is based off PubNub [rltm.js](https://github.com/pubnub/rltm.js) which lets you switch between PubNub and Socket.io just by changing your configuration. Check out [the rltm.js docs](https://github.com/pubnub/rltm.js) for more information.",
                    "type": "Object"
                },
                {
                    "name": "config.globalChannel",
                    "description": "his is the global channel that all clients are connected to automatically. It's used for global announcements, global presence, etc.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an instance of OCF",
                "type": "Object"
            }
        },
        "RootEmitter": {
            "name": "RootEmitter",
            "shortname": "RootEmitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 30,
            "description": "Configures an event emitter that other OCF objects inherit. Adds shortcut methods for \n```this.on()```, ```this.emit()```, etc.",
            "is_constructor": 1
        },
        "Emitter": {
            "name": "Emitter",
            "shortname": "Emitter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 83,
            "description": "An OCF generic emitter that supports plugins and forwards\nevents to a global emitter.",
            "is_constructor": 1,
            "extends": "RootEmitter"
        },
        "Chat": {
            "name": "Chat",
            "shortname": "Chat",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 143,
            "description": "This is the root {{#crossLink \"Chat\"}}{{/crossLink}} class that represents a chat room",
            "is_constructor": 1,
            "params": [
                {
                    "name": "channel",
                    "description": "The channel name for the Chat",
                    "type": "String"
                }
            ],
            "extends": "Emitter"
        },
        "User": {
            "name": "User",
            "shortname": "User",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 526,
            "description": "This is our User class which represents a connected client",
            "is_constructor": 1,
            "extends": "Emitter"
        },
        "Me": {
            "name": "Me",
            "shortname": "Me",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 645,
            "description": "Represents the client connection as a {{#crossLink \"User\"}}{{/crossLink}}. \nHas the ability to update it's state on the network. An instance of \n{{#crossLink \"Me\"}}{{/crossLink}} is returned by the ```OCF.connect()```\nmethod.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "uuid",
                    "description": "The uuid of this user",
                    "type": "String"
                }
            ],
            "extends": "User"
        },
        "OCF": {
            "name": "OCF",
            "shortname": "OCF",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/index.js",
            "line": 693,
            "description": "Provides the base Widget class..."
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "src/index.js",
            "line": 53,
            "description": "Listen for a specific event and fire a callback when it's emitted",
            "itemtype": "method",
            "name": "on",
            "params": [
                {
                    "name": "event",
                    "description": "The event name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The function to run when the event is emitted",
                    "type": "Function"
                }
            ],
            "class": "RootEmitter"
        },
        {
            "file": "src/index.js",
            "line": 62,
            "description": "Listen for any event on this object and fire a callback when it's emitted",
            "itemtype": "method",
            "name": "onAny",
            "params": [
                {
                    "name": "callback",
                    "description": "The function to run when any event is emitted. First parameter is the event name and second is the payload.",
                    "type": "Function"
                }
            ],
            "class": "RootEmitter"
        },
        {
            "file": "src/index.js",
            "line": 70,
            "description": "Listen for an event and only fire the callback a single time",
            "itemtype": "method",
            "name": "once",
            "params": [
                {
                    "name": "event",
                    "description": "The event name",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The function to run once",
                    "type": "Function"
                }
            ],
            "class": "RootEmitter"
        },
        {
            "file": "src/index.js",
            "line": 157,
            "description": "The channel name for this {{#crossLink \"Chat\"}}{{/crossLink}}",
            "itemtype": "property",
            "name": "channel",
            "type": "String",
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 165,
            "description": "A list of users in this {{#crossLink \"Chat\"}}{{/crossLink}}. Automatically kept in sync,\nUse ```Chat.on('$ocf.join')``` and related events to get notified when this changes",
            "itemtype": "property",
            "name": "users",
            "type": "Object",
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 191,
            "description": "Broadcast that a {{#crossLink \"User\"}}{{/crossLink}} has joined the room",
            "itemtype": "event",
            "name": "$ocf.join",
            "params": [
                {
                    "name": "payload.user",
                    "description": "The {{#crossLink \"User\"}}{{/crossLink}} that came online",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 234,
            "description": "Execute a function when network connection has been made and {{#crossLink \"Chat\"}}{{/crossLink}} is ready",
            "itemtype": "method",
            "name": "ready",
            "params": [
                {
                    "name": "callback",
                    "description": "Function to execute when connection is ready",
                    "type": "Function"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 244,
            "description": "Send events to other clients in this {{#crossLink \"User\"}}{{/crossLink}}. \nEvents are broadcast over the network  and all events are made \non behalf of {{#crossLink \"Me\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "send",
            "params": [
                {
                    "name": "event",
                    "description": "The event name",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The event payload object",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 282,
            "access": "private",
            "tagname": "Broadcasts an event locally to all listeners.",
            "itemtype": "method",
            "name": "broadcast",
            "params": [
                {
                    "name": "event",
                    "description": "The event name",
                    "type": "String"
                },
                {
                    "name": "payload",
                    "description": "The event payload object",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 314,
            "access": "private",
            "tagname": "Add a user to the {{#crossLink \"Chat\"}}{{/crossLink}}, creating it if it doesn't already exist.",
            "itemtype": "method",
            "name": "createUser",
            "params": [
                {
                    "name": "uuid",
                    "description": "The user uuid",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "The user initial state",
                    "type": "Object"
                },
                {
                    "name": "broadcast",
                    "description": "Force a broadcast that this user is online",
                    "type": "Boolean"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 335,
            "description": "Broadcast that a {{#crossLink \"User\"}}{{/crossLink}} has come online",
            "itemtype": "event",
            "name": "$ocf.online",
            "params": [
                {
                    "name": "payload.user",
                    "description": "The {{#crossLink \"User\"}}{{/crossLink}} that came online",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 355,
            "access": "private",
            "tagname": "Update a user's state within this {{#crossLink \"Chat\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "userUpdate",
            "params": [
                {
                    "name": "uuid",
                    "description": "The {{#crossLink \"User\"}}{{/crossLink}} uuid",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "State to update for the user",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 377,
            "description": "Broadcast that a {{#crossLink \"User\"}}{{/crossLink}} has changed state",
            "itemtype": "event",
            "name": "$ocf.state",
            "params": [
                {
                    "name": "payload.user",
                    "description": "The {{#crossLink \"User\"}}{{/crossLink}} that changed state",
                    "type": "Object"
                },
                {
                    "name": "payload.state",
                    "description": "The new user state for this ```Chat```",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 391,
            "description": "Leave from the {{#crossLink \"Chat\"}}{{/crossLink}} on behalf of {{#crossLink \"Me\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "leave",
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 405,
            "access": "private",
            "tagname": "Perform updates when a user has left the {{#crossLink \"Chat\"}}{{/crossLink}}.",
            "itemtype": "method",
            "name": "leave",
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 435,
            "access": "private",
            "tagname": "Fired when a user disconnects from the {{#crossLink \"Chat\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "userDisconnect",
            "params": [
                {
                    "name": "uuid",
                    "description": "The uuid of the {{#crossLink \"Chat\"}}{{/crossLink}} that left",
                    "type": "String"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 447,
            "description": "A {{#crossLink \"User\"}}{{/crossLink}} has been disconnected from the ```Chat```",
            "itemtype": "event",
            "name": "$ocf.disconnect",
            "params": [
                {
                    "name": "User",
                    "description": "The {{#crossLink \"User\"}}{{/crossLink}} that disconnected",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 455,
            "description": "A {{#crossLink \"User\"}}{{/crossLink}} has gone offline",
            "itemtype": "event",
            "name": "$ocf.offline",
            "params": [
                {
                    "name": "User",
                    "description": "The {{#crossLink \"User\"}}{{/crossLink}} that has gone offline",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 467,
            "access": "private",
            "tagname": "Load plugins and attach a queue of functions to execute before and\nafter events are broadcast or received.",
            "itemtype": "method",
            "name": "runPluginQueue",
            "params": [
                {
                    "name": "location",
                    "description": "Where in the middleeware the event should run (send, broadcast)",
                    "type": "String"
                },
                {
                    "name": "event",
                    "description": "The event name",
                    "type": "String"
                },
                {
                    "name": "first",
                    "description": "The first function to run before the plugins have run",
                    "type": "String"
                },
                {
                    "name": "last",
                    "description": "The last function to run after the plugins have run",
                    "type": "String"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 510,
            "access": "private",
            "tagname": "Set the state for {{#crossLink \"Me\"}}{{/crossLink}} within this {{#crossLink \"User\"}}{{/crossLink}}. \nBroadcasts the ```$ocf.state``` event on other clients",
            "itemtype": "method",
            "name": "setState",
            "params": [
                {
                    "name": "state",
                    "description": "The new state {{#crossLink \"Me\"}}{{/crossLink}} will have within this {{#crossLink \"User\"}}{{/crossLink}}",
                    "type": "Object"
                }
            ],
            "class": "Chat"
        },
        {
            "file": "src/index.js",
            "line": 539,
            "description": "the User's uuid. This is public id exposed to the network.",
            "itemtype": "property",
            "name": "uuid",
            "type": "String",
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 547,
            "description": "keeps account of user state in each channel",
            "itemtype": "property",
            "name": "states",
            "type": "Object",
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 555,
            "description": "keep a list of chatrooms this user is in",
            "itemtype": "property",
            "name": "chats",
            "type": "Object",
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 563,
            "description": "every user has a couple personal rooms we can connect to\nfeed is a list of things a specific user does that \nmany people can subscribe to",
            "itemtype": "property",
            "name": "feed",
            "type": "Chat",
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 574,
            "description": "direct is a private channel that anybody can publish to\nbut only the user can subscribe to\nthis permission based system is not implemented yet",
            "itemtype": "property",
            "name": "direct",
            "type": "Chat",
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 596,
            "description": "get the user's state in a chatroom",
            "itemtype": "method",
            "name": "state",
            "params": [
                {
                    "name": "chat",
                    "description": "Chatroom to retrieve state from",
                    "type": "Chat"
                }
            ],
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 606,
            "description": "update the user's state in a specific chatroom",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "state",
                    "description": "The new state for the user",
                    "type": "Object"
                },
                {
                    "name": "chat",
                    "description": "Chatroom to retrieve state from",
                    "type": "Chat"
                }
            ],
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 618,
            "access": "private",
            "tagname": "this is only called from network updates",
            "itemtype": "method",
            "name": "assign",
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 628,
            "access": "private",
            "tagname": "adds a chat to this user",
            "itemtype": "method",
            "name": "addChat",
            "class": "User"
        },
        {
            "file": "src/index.js",
            "line": 673,
            "description": "Update this user state over the network",
            "itemtype": "method",
            "name": "update",
            "params": [
                {
                    "name": "state",
                    "description": "The new state for {{#crossLink \"Me\"}}{{/crossLink}}",
                    "type": "Object"
                },
                {
                    "name": "chat",
                    "description": "An instance of the {{#crossLink \"Chat\"}}{{/crossLink}} where state will be updated.\nDefaults to ```OCF.globalChat```.",
                    "type": "Chat"
                }
            ],
            "class": "Me"
        },
        {
            "file": "src/index.js",
            "line": 721,
            "description": "connect to realtime service and create instance of {{#crossLink \"Me\"}}{{/crossLink}}",
            "itemtype": "method",
            "name": "connect",
            "params": [
                {
                    "name": "uuid",
                    "description": "The uuid for {{#crossLink \"Me\"}}{{/crossLink}}",
                    "type": "String"
                },
                {
                    "name": "state",
                    "description": "The initial state for {{#crossLink \"Me\"}}{{/crossLink}}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "me an instance of me",
                "type": "Me"
            },
            "class": "OCF"
        }
    ],
    "warnings": []
}